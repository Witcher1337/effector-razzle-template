{"ast":null,"code":"var _effectorFileName = \"/src/shared/libs/page-routing/index.ts\";\nimport { useEvent } from 'effector-react/scope';\nimport { createEvent } from 'effector';\nimport * as React from 'react';\nimport { useLocation, useParams } from 'react-router';\nvar START = \"\\u2604\\uFE0F/start-event\";\n/**\n * Creates event to handle universal page loading\n */\n\nexport function createStart() {\n  return createEvent.apply(void 0, Array.prototype.slice.call(arguments).concat([{\n    loc: {\n      file: _effectorFileName,\n      line: 10,\n      column: 11\n    },\n    sid: \"luntxa\"\n  }]));\n}\n/**\n * Loads start event on browser side and pass params and query\n */\n\nexport function useStart(startEvent) {\n  var params = useParams();\n  var location = useLocation();\n  var query = React.useMemo(function () {\n    return Object.fromEntries(new URLSearchParams(location.search));\n  }, [location.search]);\n  var start = useEvent(startEvent);\n  React.useEffect(function () {\n    start({\n      path: location.pathname,\n      params: params,\n      query: query\n    });\n  }, []);\n}\n/**\n * Ejects start event from component\n */\n\nexport function getStart(component) {\n  if (component) return component[START];\n}\n/**\n * Assign start event to component\n */\n\nexport function withStart(event, component) {\n  component[START] = event;\n  return component;\n}","map":{"version":3,"mappings":";AAAA,SAAQA,QAAR,QAAuB,sBAAvB;AACA,SAAQC,WAAR,QAAiC,UAAjC;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAAQC,WAAR,EAAqBC,SAArB,QAA6C,cAA7C;AAEA,IAAMC,KAAK,6BAAX;AAoBA;;;;AAGA,OAAM,SAAUC,WAAV,GAAyC;EAC7C,OAAOL,WAAW,MAAX;IAAA;MAAA;MAAA;MAAA;IAAA;IAAA;EAAA,IAAP;AACD;AAED;;;;AAGA,OAAM,SAAUM,QAAV,CAAyCC,UAAzC,EAAsD;EAC1D,IAAMC,MAAM,GAAGL,SAAS,EAAxB;EACA,IAAMM,QAAQ,GAAGP,WAAW,EAA5B;EACA,IAAMQ,KAAK,GAAGT,KAAK,CAACU,OAAN,CAAc;IAAA,OAAMC,MAAM,CAACC,WAAP,CAAmB,IAAIC,eAAJ,CAAoBL,QAAQ,CAACM,MAA7B,CAAnB,CAAN;EAAA,CAAd,EAA8E,CAACN,QAAQ,CAACM,MAAV,CAA9E,CAAd;EACA,IAAMC,KAAK,GAAGjB,QAAQ,CAACQ,UAAD,CAAtB;EAEAN,KAAK,CAACgB,SAAN,CAAgB,YAAK;IACnBD,KAAK,CAAC;MACJE,IAAI,EAAET,QAAQ,CAACU,QADX;MAEJX,MAAM,EAANA,MAFI;MAGJE,KAAK,EAALA;IAHI,CAAD,CAAL;EAKD,CAND,EAMG,EANH;AAOD;AAED;;;;AAGA,OAAM,SAAUU,QAAV,CAAsBC,SAAtB,EAAkC;EACtC,IAAIA,SAAJ,EAAe,OAAOA,SAAS,CAACjB,KAAD,CAAhB;AAChB;AAED;;;;AAGA,OAAM,SAAUkB,SAAV,CAA0BC,KAA1B,EAAuDF,SAAvD,EAA6E;EACjFA,SAAS,CAACjB,KAAD,CAAT,GAAmBmB,KAAnB;EACA,OAAOF,SAAP;AACD","names":["useEvent","createEvent","React","useLocation","useParams","START","createStart","useStart","startEvent","params","location","query","useMemo","Object","fromEntries","URLSearchParams","search","start","useEffect","path","pathname","getStart","component","withStart","event"],"sourceRoot":"","sources":["/Users/Root/Desktop/with-typescript-plugin/src/shared/libs/page-routing/index.ts"],"sourcesContent":["import {useEvent} from 'effector-react/scope';\nimport {createEvent, Event} from 'effector';\n\nimport * as React from 'react';\nimport {useLocation, useParams, Params} from 'react-router';\n\nconst START = `☄️/start-event`;\n\nexport type KeyValueMap = Record<string, string>;\n\nexport type RouteParams<P> = {\n  params?: P;\n};\n\nexport type RouteQuery<Q> = {\n  query?: Q;\n};\n\nexport type RoutePath = {\n  path: string;\n};\n\nexport type StartEvent<P = void, Q = void> = RoutePath &\n  (P extends void ? RouteParams<Params<string>> : P) &\n  (Q extends void ? RouteQuery<KeyValueMap> : Q);\n\n/**\n * Creates event to handle universal page loading\n */\nexport function createStart(...params: string[]): Event<StartEvent> {\n  return createEvent(...params);\n}\n\n/**\n * Loads start event on browser side and pass params and query\n */\nexport function useStart<T extends Event<any>>(startEvent: T) {\n  const params = useParams();\n  const location = useLocation();\n  const query = React.useMemo(() => Object.fromEntries(new URLSearchParams(location.search)), [location.search]);\n  const start = useEvent(startEvent);\n\n  React.useEffect(() => {\n    start({\n      path: location.pathname,\n      params,\n      query,\n    });\n  }, []);\n}\n\n/**\n * Ejects start event from component\n */\nexport function getStart<T>(component: T): undefined | Event<StartEvent> {\n  if (component) return component[START];\n}\n\n/**\n * Assign start event to component\n */\nexport function withStart<T, P>(event: Event<StartEvent<T>>, component: React.FC<P>): React.FC<P> {\n  component[START] = event;\n  return component;\n}\n"]},"metadata":{},"sourceType":"module"}